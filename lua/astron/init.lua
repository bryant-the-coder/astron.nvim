local variants = require("astron.colors")
local cfg = require("astron.config").config
local C = variants[cfg.variants]
local utils = require("astron.utils")
local M = {}

local set_groups = function()
	local groups = {
		-- Basic syntax highlights
		Normal = { fg = C.fg, bg = C.bg },
		Comment = { fg = C.grey_2, bg = C.none, style = cfg.comment_style },
		Constant = { fg = C.yellow, bg = C.none },
		String = { fg = C.green, bg = C.none },
		Character = { fg = C.green, bg = C.none },
		Number = { fg = C.orange, bg = C.none },
		Boolean = { fg = C.blue, bg = C.none, style = cfg.keyword_style },
		Float = { fg = C.yellow, bg = C.none },
		Identifier = { fg = C.blue, bg = C.none },
		Function = { fg = C.yellow, bg = C.none, style = cfg.function_style },
		Statement = { fg = C.purple, bg = C.none },
		Conditional = { fg = C.purple, bg = C.none, style = cfg.keyword_style },
		Repeat = { fg = C.purple, bg = C.none, cfg.keyword_style, cfg.keyword_style },
		Label = { fg = C.blue, bg = C.none },
		Operator = { fg = C.purple, bg = C.none },
		Keyword = { fg = C.purple, bg = C.none, style = cfg.keyword_style },
		Exception = { fg = C.purple, bg = C.none },
		Preproc = { fg = C.yellow, bg = C.none },
		Include = { fg = C.purple, bg = C.none },
		Define = { fg = C.purple, bg = C.none },
		Title = { fg = C.cyan, bg = C.none },
		Macro = { fg = C.purple, bg = C.none },
		PreCondit = { fg = C.blue, bg = C.none },
		Type = { fg = C.blue, bg = C.none },
		StorageClass = { fg = C.blue, bg = C.none },
		Structure = { fg = C.yellow, bg = C.none },
		Typedef = { fg = C.yellow, bg = C.none },
		Special = { fg = C.blue, bg = C.none },
		SpecialComment = { fg = C.grey, bg = C.none },
		Error = { fg = C.red, bg = C.none },
		Todo = { fg = C.purple, bg = C.none },
		Underlined = { fg = C.cyan, bg = C.none },
		Cursor = { fg = C.none, bg = C.none },
		ColorColumn = { fg = C.none, bg = C.grey_4 },
		CursorLineNr = { fg = C.fg, bg = C.none },
		Conceal = { fg = C.grey, bg = C.none },
		CursorColumn = { fg = C.none, bg = C.grey_4 },
		CursorLine = { fg = C.none, bg = C.grey_8 },
		Directory = { fg = C.blue, bg = C.none },
		DiffAdd = { fg = C.grey_3, bg = C.green },
		DiffChange = { fg = C.yellow, bg = C.none },
		DiffDelete = { fg = C.grey_3, bg = C.red },
		DiffText = { fg = C.grey_3, bg = C.yellow },
		ErrorMsg = { fg = C.red, bg = C.none },
		VertSplit = { fg = C.black, bg = C.none },
		Folded = { fg = C.grey, bg = C.none },
		FoldColumn = { fg = C.none, bg = C.none },
		IncSearch = { fg = C.blue_1, bg = C.grey },
		LineNr = { fg = C.grey_2, bg = C.none },
		NonText = { fg = C.grey_1, bg = C.none },
		Pmenu = { fg = C.fg, bg = C.black_1 },
		PmenuSel = { fg = C.none, bg = C.grey_4 },
		PmenuSbar = { fg = C.none, bg = C.grey_3 },
		PmenuThumb = { fg = C.none, bg = C.fg },
		Question = { fg = C.purple, bg = C.none },
		QuickFixLine = { fg = C.grey_3, bg = C.yellow },
		Search = { fg = C.grey_3, bg = C.yellow },
		SignColumn = { fg = C.bg, bg = C.bg },
		SpecialKey = { fg = C.grey_1, bg = C.none },
		SpellBad = { fg = C.red, bg = C.none },
		SpellCap = { fg = C.yellow, bg = C.none },
		SpellLocal = { fg = C.yellow, bg = C.none },
		SpellRare = { fg = C.yellow, bg = C.none },
		StatusLine = { fg = C.fg, bg = C.bg },
		StatusLineNC = { fg = C.grey, bg = C.none },
		StatusLineTerm = { fg = C.fg, bg = C.grey_4 },
		StatusLineTermNC = { fg = C.grey_4, bg = C.none },
		TabLine = { fg = C.grey, bg = C.none },
		TabLineSel = { fg = C.fg, bg = C.none },
		TabLineFill = { fg = C.none, bg = C.grey_3 },
		Terminal = { fg = C.fg, bg = C.grey_3 },
		Visual = { fg = C.none, bg = C.grey_5 },
		VisualNOS = { fg = C.grey_5, bg = C.none },
		WarningMsg = { fg = C.yellow, bg = C.none },
		WildMenu = { fg = C.grey_3, bg = C.blue },
		EndOfBuffer = { fg = C.bg, bg = C.none },
		FloatBorder = { bg = C.none },
		MatchParen = { fg = C.none, bg = C.grey_5 },

		-- Markdown
		markdownH1 = { fg = C.red_1, style = "bold,italic" },
		markdownH2 = { fg = C.green, style = "bold" },
		markdownH3 = { fg = C.blue, style = "bold" },
		markdownH4 = { fg = C.orange, style = "bold" },
		markdownH5 = { fg = C.yellow_1, style = "bold" },
		markdownH6 = { fg = C.yellow_1, style = "bold" },

		-- LSP
		DiagnosticError = { fg = C.red_1 },
		DiagnosticWarn = { fg = C.orange_1 },
		DiagnosticInfo = { fg = C.white_2 },
		DiagnosticHint = { fg = C.yellow_1 },
		DiagnosticHeader = { fg = C.green_2 },
		DiagnosticUnderlineError = { style = "undercurl", sp = C.red_2 },
		DiagnosticUnderlineWarn = { style = "undercurl", sp = C.red_2 },
		DiagnosticUnderlineInfo = { style = "undercurl", sp = C.red_2 },
		DiagnosticUnderlineHint = { style = "undercurl", sp = C.red_2 },
		LspReferenceText = { fg = C.none, bg = C.grey_5 },
		LspReferenceRead = { fg = C.none, bg = C.grey_5 },
		LspReferenceWrite = { fg = C.none, bg = C.grey_5 },
		LspSagaDiagnosticBorder = { fg = C.white_1 },
		LspSagaSignatureHelpBorder = { fg = C.white_1 },
		LspSagaLspFinderBorder = { fg = C.white_1 },
		LspSagaCodeActionBorder = { fg = C.white_1 },
		LspSagaDefPreviewBorder = { fg = C.white_1 },
		LspSagaHoverBorder = { fg = C.white_1 },
		LspSagaRenameBorder = { fg = C.white_1 },
		LspSagaRenamePromptPrefix = { fg = C.white_1 },
		LspFloatWinBorder = { fg = C.white_1 },
		LspSagaDiagnosticTruncateLine = { fg = C.white_1 },
		LspSagaShTruncateLine = { fg = C.white_1 },
		LspSagaDocTruncateLine = { fg = C.white_1 },
		LspSagaCodeActionTruncateLine = { fg = C.white_1 },
		ProviderTruncateLine = { fg = C.white_1 },
		DiagnosticTruncateLine = { fg = C.white_1, style = "bold" },
		LspSagaCodeActionTitle = { fg = C.yellow, style = "bold" },
		LspSagaCodeActionContent = { fg = C.green, style = "bold" },
		LspFloatWinNormal = { fg = C.fg, bg = C.black_1 },
		LspDiagnosticsFloatingError = { fg = C.red_1 },
		LspDiagnosticsFloatingWarn = { fg = C.orange_1 },
		LspDiagnosticsFloatingInfor = { fg = C.white_2 },
		LspDiagnosticsFloatingHint = { fg = C.yellow_1 },
		LspSagaDiagnosticHeader = { fg = C.yellow },
		LspSagaBorderTitle = { fg = C.yellow, style = "bold" },
		DiagnosticInformation = { fg = C.yellow, style = "bold" },

		-- CMP
		CmpItemAbbrMatch = { fg = C.blue_3 },
		CmpItemAbbrMatchFuzzy = { fg = C.blue_3 },
		CmpItemKindVariable = { fg = C.light_blue },
		CmpItemKindInterface = { fg = C.light_blue },
		CmpItemKindText = { fg = C.light_blue },
		CmpItemKindFunction = { fg = C.purple },
		CmpItemKindMethod = { fg = C.purple },
		CmpItemKindKeyword = { fg = C.white_3 },
		CmpItemKindProperty = { fg = C.white_3 },
		CmpItemKindUnit = { fg = C.purple },

		-- Treesitter
		TSError = { fg = C.red },
		TSPunctDelimiter = { fg = C.fg },
		TSPunctBracket = { fg = C.fg },
		TSPunctSpecial = { fg = C.fg },
		TSConstant = { fg = C.yellow },
		TSConstBuiltin = { fg = C.orange },
		TSConstMacro = { fg = C.red },
		TSStringRegex = { fg = C.green },
		TSString = { fg = C.green },
		TSStringEscap = { fg = C.red },
		TSCharacter = { fg = C.green },
		TSNumber = { fg = C.orange },
		TSBoolean = { fg = C.orange, style = cfg.boolean_style },
		TSComment = { fg = C.grey_2, bg = C.none, style = cfg.comment_style },
		TSFloat = { fg = C.green },
		TSAnnotation = { fg = C.yellow },
		TSAttribute = { fg = C.red },
		TSNamespace = { fg = C.purple },
		TSFuncBuiltin = { fg = C.blue, style = cfg.fucntion_style },
		TSFunction = { fg = C.blue, style = cfg.function_style },
		TSFuncMacro = { fg = C.yellow },
		TSParameter = { fg = C.red },
		TSParameterReference = { fg = C.cyan },
		TSMethod = { fg = C.blue, style = cfg.function_style },
		TSField = { fg = C.red },
		TSProperty = { fg = C.yellow },
		TSConstructor = { fg = C.yellow },
		TSConditional = { fg = C.purple, style = cfg.keyword_style },
		TSRepeat = { fg = C.purple },
		TSLabel = { fg = C.blue },
		TSKeyword = { fg = C.purple, style = cfg.keyword_style },
		TSKeywordReturn = { fg = C.purple, style = cfg.keyword_style },
		TSKeywordFunction = { fg = C.purple, style = cfg.function_style },
		TSKeywordOperator = { fg = C.purple },
		TSOperator = { fg = C.cyan },
		TSException = { fg = C.purple },
		TSType = { fg = C.blue },
		TSTypeBuiltin = { fg = C.blue },
		TSStructure = { fg = C.purple },
		TSInclude = { fg = C.purple },
		TSVariable = { fg = C.red, style = cfg.variable_style },
		TSVariableBuiltin = { fg = C.yellow, style = cfg.variable_style },
		TSText = { fg = C.fg },
		TSStrong = { fg = C.fg },
		TSEmphasis = { fg = C.fg },
		TSUnderline = { fg = C.fg },
		TSTitle = { fg = C.fg },
		TSLiteral = { fg = C.fg },
		TSURI = { fg = C.fg },
		TSTag = { fg = C.red },
		TSTagDelimiter = { fg = C.fg },
		rainbowcol1 = { fg = "Gold" },
		rainbowcol2 = { fg = "Orchid" },
		rainbowcol3 = { fg = "LightSkyBlue" },
		rainbowcol4 = { fg = "Gold" },
		rainbowcol5 = { fg = "Orchid" },
		rainbowcol6 = { fg = "LightSkyBlue" },
		rainbowcol7 = { fg = "Orchid" },

		-- Telescope
		TelescopeResultsTitle = { fg = C.green, style = "italic" },
		TelescopePromptTitle = { fg = C.blue },
		TelescopePreviewTitle = { fg = C.purple },
		TelescopeResultsBorder = { fg = C.fg },
		TelescopePromptBorder = { fg = C.fg },
		TelescopePreviewBorder = { fg = C.fg },
		TelescopeSelectionCaret = { fg = C.red },
		TelescopeMatching = { fg = C.yellow },
		TelescopeSelection = { bg = C.grey_5 },
		TelescopeMultiSelection = { fg = C.blue },
		TelescopeMultiIcon = { fg = C.blue },
		TelescopeNormal = { fg = C.fg, bg = C.bg },
		TelescopePreviewNormal = { fg = C.fg, bg = C.bg },
		TelescopePromptNormal = { fg = C.fg, bg = C.bg },
		TelescopeResultsNormal = { fg = C.fg, bg = C.bg },
		TelescopeBorder = { fg = C.fg },
		TelescopeTitle = { fg = C.fg },
		TelescopePromptCounter = { fg = C.red },
		TelescopePromptPrefix = { fg = C.blue },
		TelescopePreviewLine = { fg = C.grey_5 },
		TelescopePreviewMatch = { fg = C.yellow },
		TelescopePreviewPipe = { fg = C.yellow },
		TelescopePreviewCharDev = { fg = C.yellow },
		TelescopePreviewDirectory = { fg = C.blue },
		TelescopePreviewBlock = { fg = C.yellow },
		TelescopePreviewLink = { fg = C.blue },
		TelescopePreviewSocket = { fg = C.purple },
		TelescopePreviewRead = { fg = C.yellow },
		TelescopePreviewWrite = { fg = C.purple },
		TelescopePreviewExecute = { fg = C.green },
		TelescopePreviewHyphen = { fg = C.grey_1 },
		TelescopePreviewSticky = { fg = C.blue },
		TelescopePreviewSize = { fg = C.green },
		TelescopePreviewUser = { fg = C.yellow },
		TelescopePreviewGroup = { fg = C.yellow },
		TelescopePreviewDate = { fg = C.blue },
		TelescopePreviewMessage = { fg = C.fg },
		TelescopePreviewMessageFillchar = { fg = C.fg },
		TelescopeResultsClass = { fg = C.yellow },
		TelescopeResultsConstant = { fg = C.yellow },
		TelescopeResultsField = { fg = C.red },
		TelescopeResultsFunction = { fg = C.blue },
		TelescopeResultsMethod = { fg = C.blue },
		TelescopeResultsOperator = { fg = C.cyan },
		TelescopeResultsStruct = { fg = C.purple },
		TelescopeResultsVariable = { fg = C.red },
		TelescopeResultsLineNr = { fg = C.grey_1 },
		TelescopeResultsIdentifier = { fg = C.blue },
		TelescopeResultsNumber = { fg = C.orange },
		TelescopeResultsComment = { fg = C.grey_2 },
		TelescopeResultsSpecialComment = { fg = C.grey },
		TelescopeResultsDiffChange = { fg = C.none, bg = C.yellow },
		TelescopeResultsDiffAdd = { fg = C.none, bg = C.green },
		TelescopeResultsDiffDelete = { fg = C.none, bg = C.red },
		TelescopeResultsDiffUntracked = { fg = C.none, bg = C.grey_1 },

		-- NvimTree
		NvimTreeFolderIcon = { fg = C.blue },
		NvimTreeExecFile = { fg = C.green },
		NvimTreeOpenedFile = { fg = C.green },
		NvimTreeRootFolder = { fg = C.fg },
		NvimTreeEndOfBuffer = { fg = C.bg },
		NvimTreeNormal = { bg = C.blue_2 },
		NvimTreeNormalNC = { bg = C.blue_2 },
		NvimTreeVertSplit = { fg = C.blue_2, bg = C.blue_2 },
		NvimTreeImageFile = { fg = C.purple },
		NvimTreeSymlink = { fg = C.cyan },
		NvimTreeSpecialFile = { fg = C.yellow },
		NvimTreeGitDeleted = { fg = C.red },
		NvimTreeGitMerge = { fg = C.orange },
		NvimTreeGitRenamed = { fg = C.purple },
		NvimTreeGitStaged = { fg = C.green },
		NvimTreeGitDirty = { fg = C.red },
		NvimTreeGitNew = { fg = C.yellow },

		-- VimWiki
		VimwikiLink = { fg = C.cyan, bg = C.none },
		VimwikiHeaderChar = { fg = C.grey, bg = C.none },
		VimwikiHR = { fg = C.yellow, bg = C.none },
		VimwikiList = { fg = C.orange, bg = C.orange },
		VimwikiTag = { fg = C.orange, bg = C.orange },
		VimwikiMarkers = { fg = C.grey, bg = C.none },
		VimwikiHeader1 = { fg = C.orange, bg = C.none, style = "bold" },
		VimwikiHeader2 = { fg = C.green, bg = C.none, style = "bold" },
		VimwikiHeader3 = { fg = C.blue, bg = C.none, style = "bold" },
		VimwikiHeader4 = { fg = C.cyan, bg = C.none, style = "bold" },
		VimwikiHeader5 = { fg = C.yellow, bg = C.none, style = "bold" },
		VimwikiHeader6 = { fg = C.purple, bg = C.none, style = "bold" },

		-- IndentBlankLine
		IndentBlanklineSpaceChar = { fg = C.grey_6, style = "nocombine" },
		IndentBlanklineChar = { fg = C.grey_6, style = "nocombine" },
		IndentBlanklineContextStart = { fg = C.grey_7, style = "underline" },
		IndentBlanklineContextChar = { fg = C.grey_7, style = "nocombine" },
		IndentBlanklineSpaceCharBlankline = { fg = C.grey_6, style = "nocombine" },

		-- GitSigns
		GitSignsAdd = { fg = C.green, bg = C.none },
		GitSignsChange = { fg = C.orange_1, bg = C.none },
		GitSignsDelete = { fg = C.red_1, bg = C.none },
		MoreMsg = { fg = C.green, style = "bold" },
		ModeMsg = { fg = C.grey, style = "bold" },

		-- Dashboard
		DashboardHeader = { fg = C.cyan },
		DashboardShortcut = { fg = C.yellow },
		DashboardFooter = { fg = C.purple, style = "italic" },
		DashboardCenter = { fg = C.blue },

		-- WhichKey
		WhichKeyFloat = { fg = C.fg },
		WhichKeyDesc = { fg = C.blue },
		WhichKeyGroup = { fg = C.blue },

		-- SymbolsOutline
		FocusedSymbol = { fg = C.yellow, bg = C.none },
	}

	for group, parameters in pairs(groups) do
		utils.highlight(group, parameters)
	end
end

M.colorscheme = function()
	vim.api.nvim_command("hi clear")
	if vim.fn.exists("syntax_on") then
		vim.api.nvim_command("syntax reset")
	end

	vim.o.termguicolors = true
	vim.g.colors_name = "astron"

	set_groups()
end

return M
